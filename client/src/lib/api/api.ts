/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/properties/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Properties
         * @description Get a list of properties with minimal information needed for the frontend.
         *     Optimized for frontend listing views with filtering by developer.
         */
        get: operations["get_properties_properties__get"];
        put?: never;
        /**
         * Create Property
         * @description Create a new property in the database.
         */
        post: operations["create_property_properties__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/properties/{property_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Property
         * @description Get a detailed view of a single property.
         *     Optimized for frontend detail views.
         */
        get: operations["get_property_properties__property_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/properties/{property_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update Property
         * @description Update an existing property with new data.
         */
        put: operations["update_property_properties__property_id___put"];
        post?: never;
        /**
         * Delete Property
         * @description Delete a property from the database.
         */
        delete: operations["delete_property_properties__property_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/purchases/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Purchases
         * @description Get a list of purchases with property information and enhanced filtering.
         *     Optimized for frontend listing views.
         */
        get: operations["get_purchases_purchases__get"];
        put?: never;
        /**
         * Create Purchase
         * @description Create a new purchase.
         */
        post: operations["create_purchase_purchases__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/purchases/{purchase_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update Purchase
         * @description Update an existing purchase by purchase_id.
         */
        put: operations["update_purchase_purchases__purchase_id___put"];
        post?: never;
        /**
         * Delete Purchase
         * @description Delete a purchase by purchase_id.
         */
        delete: operations["delete_purchase_purchases__purchase_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/purchases/{purchase_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Purchase
         * @description Get a detailed view of a single purchase with property information.
         *     Optimized for frontend detail views.
         */
        get: operations["get_purchase_purchases__purchase_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/loans/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Loans
         * @description Get a list of loans with essential information for the frontend.
         *     Optimized for frontend listing views with enhanced filtering using a single SQL query.
         */
        get: operations["get_loans_loans__get"];
        put?: never;
        /**
         * Create Loan
         * @description Create a new loan and automatically create a payment source for it.
         *     Validates that:
         *     1. The purchase exists
         *     2. The loan amount doesn't exceed total invoice amounts for the purchase
         *     3. The loan sanction amount doesn't exceed purchase total cost
         */
        post: operations["create_loan_loans__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/loans/{loan_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Loan
         * @description Get a detailed view of a single loan with property information.
         *     Optimized for frontend detail views.
         */
        get: operations["get_loan_loans__loan_id___get"];
        /**
         * Update Loan
         * @description Update the details of an existing loan and its associated payment source.
         */
        put: operations["update_loan_loans__loan_id___put"];
        post?: never;
        /**
         * Delete Loan
         * @description Delete a loan and its associated payment sources, if they have no associated payments.
         */
        delete: operations["delete_loan_loans__loan_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/payments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Payments
         * @description Get a list of payments with property and invoice information
         */
        get: operations["get_payments_payments__get"];
        put?: never;
        /**
         * Create Payment
         * @description Create a new payment
         */
        post: operations["create_payment_payments__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/payments/{payment_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update Payment
         * @description Update a payment
         */
        put: operations["update_payment_payments__payment_id___put"];
        post?: never;
        /**
         * Delete Payment
         * @description Delete a payment
         */
        delete: operations["delete_payment_payments__payment_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/payments/{payment_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Payment
         * @description Get a detailed view of a single payment with property and invoice information
         */
        get: operations["get_payment_payments__payment_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repayments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Loan Repayments
         * @description Get a list of loan repayments with enhanced information.
         *     Optimized for frontend listing views with improved filtering.
         */
        get: operations["get_loan_repayments_repayments__get"];
        put?: never;
        /**
         * Create Loan Repayment
         * @description Create a new loan repayment.
         */
        post: operations["create_loan_repayment_repayments__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repayments/{repayment_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update Loan Repayment
         * @description Update an existing loan repayment by ID.
         */
        put: operations["update_loan_repayment_repayments__repayment_id___put"];
        post?: never;
        /**
         * Delete Loan Repayment
         * @description Delete a loan repayment by ID.
         */
        delete: operations["delete_loan_repayment_repayments__repayment_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repayments/{repayment_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Loan Repayment
         * @description Get a detailed view of a single loan repayment.
         *     Optimized for frontend detail views.
         */
        get: operations["get_loan_repayment_repayments__repayment_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/payment-sources/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Payment Sources */
        get: operations["get_payment_sources_payment_sources__get"];
        put?: never;
        /** Create Payment Source */
        post: operations["create_payment_source_payment_sources__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/payment-sources/{source_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Payment Source */
        get: operations["get_payment_source_payment_sources__source_id___get"];
        /** Update Payment Source */
        put: operations["update_payment_source_payment_sources__source_id___put"];
        post?: never;
        /** Delete Payment Source */
        delete: operations["delete_payment_source_payment_sources__source_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/invoices/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Invoices */
        get: operations["get_invoices_invoices__get"];
        put?: never;
        /**
         * Create Invoice
         * @description Create a new invoice
         */
        post: operations["create_invoice_invoices__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/invoices/{invoice_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Invoice */
        get: operations["get_invoice_invoices__invoice_id__get"];
        /**
         * Update Invoice
         * @description Update an existing invoice
         */
        put: operations["update_invoice_invoices__invoice_id__put"];
        post?: never;
        /**
         * Delete Invoice
         * @description Delete an invoice by ID
         */
        delete: operations["delete_invoice_invoices__invoice_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health Check */
        get: operations["health_check_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/construction-status/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Construction Statuses */
        get: operations["get_construction_statuses_construction_status__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/construction-status/{status_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Construction Status */
        get: operations["get_construction_status_construction_status__status_id___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/acquisition-cost/summary/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Acquisition Cost Summary */
        get: operations["get_acquisition_cost_summary_acquisition_cost_summary__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/acquisition-cost/details/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Acquisition Cost Details */
        get: operations["get_acquisition_cost_details_acquisition_cost_details__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/loan-repayment-details/summary/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Loan Repayment Summary */
        get: operations["get_loan_repayment_summary_loan_repayment_details_summary__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/loans/summary/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Loan Summary */
        get: operations["get_loan_summary_loans_summary__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/loans/summary/enhanced/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Enhanced Loan Summary */
        get: operations["get_enhanced_loan_summary_loans_summary_enhanced__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AcquisitionCostDetails */
        AcquisitionCostDetails: {
            /** User Id */
            user_id?: number | null;
            /** Purchase Id */
            purchase_id?: number | null;
            /** Payment Date */
            payment_date?: string | null;
            /** Principal */
            principal?: string | null;
            /** Interest */
            interest?: string | null;
            /** Others */
            others?: string | null;
            /** Payment */
            payment?: string | null;
            /** Source */
            source?: string | null;
            /** Mode */
            mode?: string | null;
            /** Reference */
            reference?: string | null;
            /** Type */
            type?: string | null;
        };
        /** AcquisitionCostSummary */
        AcquisitionCostSummary: {
            /** User Id */
            user_id?: number | null;
            /** Purchase Id */
            purchase_id?: number | null;
            /** Property Name */
            property_name?: string | null;
            /** Total Loan Principal */
            total_loan_principal?: string | null;
            /** Total Loan Interest */
            total_loan_interest?: string | null;
            /** Total Loan Others */
            total_loan_others?: string | null;
            /** Total Loan Payment */
            total_loan_payment?: string | null;
            /** Total Builder Principal */
            total_builder_principal?: string | null;
            /** Total Builder Payment */
            total_builder_payment?: string | null;
            /** Total Principal Payment */
            total_principal_payment?: string | null;
            /** Total Sale Cost */
            total_sale_cost?: string | null;
            /** Remaining Balance */
            remaining_balance?: string | null;
        };
        /** ConstructionStatus */
        ConstructionStatus: {
            /** Name */
            name: string;
            /** Id */
            id: number;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * Invoice
         * @description Schema for detailed view of a single invoice, extending public schema with additional details.
         */
        Invoice: {
            /** Id */
            id: number;
            /** Purchase Id */
            purchase_id: number;
            /** Property Name */
            property_name: string;
            /** Invoice Number */
            invoice_number: string;
            /**
             * Invoice Date
             * Format: date
             */
            invoice_date: string;
            /** Due Date */
            due_date?: string | null;
            /** Amount */
            amount: string;
            /**
             * Status
             * @default pending
             */
            status: string;
            /** Milestone */
            milestone?: string | null;
            /** Description */
            description?: string | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
            /**
             * Paid Amount
             * @default 0
             */
            paid_amount: string;
        };
        /**
         * InvoiceCreate
         * @description Schema for creating a new invoice, inheriting all base invoice details.
         */
        InvoiceCreate: {
            /** Purchase Id */
            purchase_id: number;
            /** Invoice Number */
            invoice_number: string;
            /**
             * Invoice Date
             * Format: date
             */
            invoice_date: string;
            /** Due Date */
            due_date?: string | null;
            /** Amount */
            amount: number | string;
            /**
             * Status
             * @default pending
             */
            status: string;
            /** Milestone */
            milestone?: string | null;
            /** Description */
            description?: string | null;
        };
        /**
         * InvoiceOld
         * @description Schema for representing an existing invoice with additional metadata like ID and timestamps.
         */
        InvoiceOld: {
            /** Purchase Id */
            purchase_id: number;
            /** Invoice Number */
            invoice_number: string;
            /**
             * Invoice Date
             * Format: date
             */
            invoice_date: string;
            /** Due Date */
            due_date?: string | null;
            /** Amount */
            amount: string;
            /**
             * Status
             * @default pending
             */
            status: string;
            /** Milestone */
            milestone?: string | null;
            /** Description */
            description?: string | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
            /**
             * Paid Amount
             * @default 0
             */
            paid_amount: string;
        };
        /**
         * InvoicePublic
         * @description Schema for listing invoices with property and purchase details.
         */
        InvoicePublic: {
            /** Id */
            id: number;
            /** Purchase Id */
            purchase_id: number;
            /** Property Name */
            property_name: string;
            /** Invoice Number */
            invoice_number: string;
            /**
             * Invoice Date
             * Format: date
             */
            invoice_date: string;
            /** Due Date */
            due_date?: string | null;
            /** Amount */
            amount: string;
            /**
             * Status
             * @default pending
             */
            status: string;
            /** Milestone */
            milestone?: string | null;
            /** Description */
            description?: string | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
            /**
             * Paid Amount
             * @default 0
             */
            paid_amount: string;
        };
        /**
         * InvoiceUpdate
         * @description Schema for updating invoice details, allowing partial updates with optional fields.
         */
        InvoiceUpdate: {
            /** Invoice Number */
            invoice_number?: string | null;
            /** Invoice Date */
            invoice_date?: string | null;
            /** Due Date */
            due_date?: string | null;
            /** Amount */
            amount?: number | string | null;
            /** Status */
            status?: string | null;
            /** Milestone */
            milestone?: string | null;
            /** Description */
            description?: string | null;
        };
        /**
         * Loan
         * @description Schema for detailed view of a single loan, including additional financial details.
         */
        Loan: {
            /** Id */
            id: number;
            /** Loan Number */
            loan_number?: string | null;
            /** Institution */
            institution?: string | null;
            /**
             * Total Disbursed Amount
             * @default 0
             */
            total_disbursed_amount: string;
            /** Sanction Amount */
            sanction_amount: string | null;
            /** Is Active */
            is_active?: boolean | null;
            /** Name */
            name: string;
            /** Property Name */
            property_name: string;
            /**
             * Processing Fee
             * @default 0
             */
            processing_fee: string;
            /**
             * Other Charges
             * @default 0
             */
            other_charges: string;
            /**
             * Loan Sanction Charges
             * @default 0
             */
            loan_sanction_charges: string;
            /** Interest Rate */
            interest_rate?: string | null;
            /** Tenure Months */
            tenure_months?: number | null;
        };
        /**
         * LoanCreate
         * @description Schema for creating a new loan, extending the base loan schema with a user ID.
         */
        LoanCreate: {
            /** Purchase Id */
            purchase_id: number;
            /** Loan Number */
            loan_number: string;
            /** Institution */
            institution: string;
            /** Agent */
            agent?: string | null;
            /**
             * Sanction Date
             * Format: date
             */
            sanction_date: string;
            /** Sanction Amount */
            sanction_amount: number | string;
            /**
             * Processing Fee
             * @default 0
             */
            processing_fee: number | string;
            /**
             * Other Charges
             * @default 0
             */
            other_charges: number | string;
            /**
             * Loan Sanction Charges
             * @default 0
             */
            loan_sanction_charges: number | string;
            /** Interest Rate */
            interest_rate: number | string;
            /** Tenure Months */
            tenure_months: number;
            /**
             * Is Active
             * @default true
             */
            is_active: boolean;
            /**
             * User Id
             * @default 1
             */
            user_id: number | null;
        };
        /**
         * LoanOld
         * @description Schema for representing an existing loan with additional metadata like creation and update timestamps.
         */
        LoanOld: {
            /** Purchase Id */
            purchase_id: number;
            /** Loan Number */
            loan_number: string;
            /** Institution */
            institution: string;
            /** Agent */
            agent?: string | null;
            /**
             * Sanction Date
             * Format: date
             */
            sanction_date: string;
            /** Sanction Amount */
            sanction_amount: string;
            /**
             * Processing Fee
             * @default 0
             */
            processing_fee: string;
            /**
             * Other Charges
             * @default 0
             */
            other_charges: string;
            /**
             * Loan Sanction Charges
             * @default 0
             */
            loan_sanction_charges: string;
            /** Interest Rate */
            interest_rate: string;
            /** Tenure Months */
            tenure_months: number;
            /**
             * Is Active
             * @default true
             */
            is_active: boolean;
            /** Id */
            id: number;
            /** User Id */
            user_id?: number | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /**
         * LoanPublic
         * @description Schema for listing loans with essential information for the frontend.
         */
        LoanPublic: {
            /** Id */
            id: number;
            /** Loan Number */
            loan_number?: string | null;
            /** Institution */
            institution?: string | null;
            /**
             * Total Disbursed Amount
             * @default 0
             */
            total_disbursed_amount: string;
            /** Sanction Amount */
            sanction_amount: string | null;
            /** Is Active */
            is_active?: boolean | null;
            /** Name */
            name: string;
        };
        /**
         * LoanRepayment
         * @description Schema for detailed view of a single loan repayment, extending public schema with additional details.
         */
        LoanRepayment: {
            /** Id */
            id: number;
            /** Loan Name */
            loan_name: string;
            /** Loan Institution */
            loan_institution: string | null;
            /** Property Name */
            property_name: string;
            /** Total Payment */
            total_payment: string;
            /** Source Name */
            source_name: string;
            /**
             * Payment Date
             * Format: date
             */
            payment_date: string;
            /** Payment Mode */
            payment_mode: string;
            /** Principal Amount */
            principal_amount: string;
            /** Interest Amount */
            interest_amount: string;
            /** Other Fees */
            other_fees: string;
            /** Penalties */
            penalties: string;
            /** Purchase Id */
            purchase_id: number;
            /** Transaction Reference */
            transaction_reference?: string | null;
            /** Notes */
            notes?: string | null;
        };
        /**
         * LoanRepaymentCreate
         * @description Schema for creating a new loan repayment, inheriting all base repayment details.
         */
        LoanRepaymentCreate: {
            /** Loan Id */
            loan_id: number;
            /**
             * Payment Date
             * Format: date
             */
            payment_date: string;
            /** Principal Amount */
            principal_amount: number | string;
            /** Interest Amount */
            interest_amount: number | string;
            /**
             * Other Fees
             * @default 0
             */
            other_fees: number | string | null;
            /**
             * Penalties
             * @default 0
             */
            penalties: number | string | null;
            /** Source Id */
            source_id: number;
            /** Payment Mode */
            payment_mode: string;
            /** Transaction Reference */
            transaction_reference?: string | null;
            /** Notes */
            notes?: string | null;
        };
        /**
         * LoanRepaymentOld
         * @description Schema for representing an existing loan repayment with additional metadata like ID and timestamps.
         */
        LoanRepaymentOld: {
            /** Loan Id */
            loan_id: number;
            /**
             * Payment Date
             * Format: date
             */
            payment_date: string;
            /** Principal Amount */
            principal_amount: string;
            /** Interest Amount */
            interest_amount: string;
            /**
             * Other Fees
             * @default 0
             */
            other_fees: string | null;
            /**
             * Penalties
             * @default 0
             */
            penalties: string | null;
            /** Source Id */
            source_id: number;
            /** Payment Mode */
            payment_mode: string;
            /** Transaction Reference */
            transaction_reference?: string | null;
            /** Notes */
            notes?: string | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /**
         * LoanRepaymentPublic
         * @description Schema for listing loan repayments with essential information for the frontend.
         */
        LoanRepaymentPublic: {
            /** Id */
            id: number;
            /** Loan Name */
            loan_name: string;
            /** Loan Institution */
            loan_institution: string | null;
            /** Property Name */
            property_name: string;
            /** Total Payment */
            total_payment: string;
            /** Source Name */
            source_name: string;
            /**
             * Payment Date
             * Format: date
             */
            payment_date: string;
            /** Payment Mode */
            payment_mode: string;
        };
        /** LoanRepaymentSummary */
        LoanRepaymentSummary: {
            /** Loan Name */
            loan_name?: string | null;
            /** Total Principal Paid */
            total_principal_paid?: string | null;
            /** Total Interest Paid */
            total_interest_paid?: string | null;
            /** Total Other Fees Paid */
            total_other_fees_paid?: string | null;
            /** Total Paid */
            total_paid?: string | null;
            /** Remaining Principal Balance */
            remaining_principal_balance?: string | null;
        };
        /**
         * LoanRepaymentUpdate
         * @description Schema for updating loan repayment details, allowing partial updates with optional fields.
         */
        LoanRepaymentUpdate: {
            /** Loan Id */
            loan_id?: number | null;
            /** Payment Date */
            payment_date?: string | null;
            /** Principal Amount */
            principal_amount?: number | string | null;
            /** Interest Amount */
            interest_amount?: number | string | null;
            /** Other Fees */
            other_fees?: number | string | null;
            /** Penalties */
            penalties?: number | string | null;
            /** Source Id */
            source_id?: number | null;
            /** Payment Mode */
            payment_mode?: string | null;
            /** Transaction Reference */
            transaction_reference?: string | null;
            /** Notes */
            notes?: string | null;
        };
        /** LoanSummary */
        LoanSummary: {
            /** Loan Name */
            loan_name?: string | null;
            /** Property Name */
            property_name?: string | null;
            /** Loan Sanctioned Amount */
            loan_sanctioned_amount?: string | null;
            /** Loan Disbursed Amount */
            loan_disbursed_amount?: string | null;
            /** Total Principal Paid */
            total_principal_paid?: string | null;
            /** Total Interest Paid */
            total_interest_paid?: string | null;
            /** Total Other Fees */
            total_other_fees?: string | null;
            /** Total Penalties */
            total_penalties?: string | null;
            /** Total Amount Paid */
            total_amount_paid?: string | null;
            /** Total Payments */
            total_payments?: number | null;
            /** Last Repayment Date */
            last_repayment_date?: string | null;
            /** Principal Balance */
            principal_balance?: string | null;
        };
        /**
         * LoanUpdate
         * @description Schema for updating loan details, allowing partial updates with optional fields.
         */
        LoanUpdate: {
            /** Loan Number */
            loan_number?: string | null;
            /** Institution */
            institution?: string | null;
            /** Agent */
            agent?: string | null;
            /** Sanction Date */
            sanction_date?: string | null;
            /** Sanction Amount */
            sanction_amount?: number | null;
            /** Processing Fee */
            processing_fee?: number | null;
            /** Other Charges */
            other_charges?: number | null;
            /** Loan Sanction Charges */
            loan_sanction_charges?: number | null;
            /** Interest Rate */
            interest_rate?: number | null;
            /** Tenure Months */
            tenure_months?: number | null;
            /** Is Active */
            is_active?: boolean | null;
        };
        /**
         * Payment
         * @description Schema for detailed view of a single payment, extending PaymentPublic with additional fields.
         */
        Payment: {
            /** Id */
            id: number;
            /**
             * Payment Date
             * Format: date
             */
            payment_date: string;
            /** Amount */
            amount: string;
            /** Source Name */
            source_name: string;
            /** Payment Mode */
            payment_mode: string;
            /** Property Name */
            property_name: string;
            /** Invoice Number */
            invoice_number: string;
            /** Transaction Reference */
            transaction_reference?: string | null;
            /** Receipt Date */
            receipt_date?: string | null;
            /** Receipt Number */
            receipt_number?: string | null;
            /** Notes */
            notes?: string | null;
        };
        /**
         * PaymentCreate
         * @description Schema for creating a new payment, inheriting from PaymentBase.
         */
        PaymentCreate: {
            /** Invoice Id */
            invoice_id: number;
            /**
             * Payment Date
             * Format: date
             */
            payment_date: string;
            /** Amount */
            amount: number | string;
            /** Source Id */
            source_id: number;
            /** Payment Mode */
            payment_mode: string;
            /** Transaction Reference */
            transaction_reference?: string | null;
            /** Receipt Date */
            receipt_date?: string | null;
            /** Receipt Number */
            receipt_number?: string | null;
            /** Notes */
            notes?: string | null;
        };
        /**
         * PaymentOld
         * @description Schema for representing an old payment record with additional metadata.
         */
        PaymentOld: {
            /** Invoice Id */
            invoice_id: number;
            /**
             * Payment Date
             * Format: date
             */
            payment_date: string;
            /** Amount */
            amount: string;
            /** Source Id */
            source_id: number;
            /** Payment Mode */
            payment_mode: string;
            /** Transaction Reference */
            transaction_reference?: string | null;
            /** Receipt Date */
            receipt_date?: string | null;
            /** Receipt Number */
            receipt_number?: string | null;
            /** Notes */
            notes?: string | null;
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /**
         * PaymentPublic
         * @description Schema for listing payments with essential information for the frontend.
         */
        PaymentPublic: {
            /** Id */
            id: number;
            /**
             * Payment Date
             * Format: date
             */
            payment_date: string;
            /** Amount */
            amount: string;
            /** Source Name */
            source_name: string;
            /** Payment Mode */
            payment_mode: string;
            /** Property Name */
            property_name: string;
            /** Invoice Number */
            invoice_number: string;
        };
        /** PaymentSource */
        PaymentSource: {
            /** Name */
            name: string;
            /** Source Type */
            source_type: string;
            /** Description */
            description?: string | null;
            /**
             * Is Active
             * @default true
             */
            is_active: boolean;
            /** Bank Name */
            bank_name?: string | null;
            /** Account Number */
            account_number?: string | null;
            /** Ifsc Code */
            ifsc_code?: string | null;
            /** Branch */
            branch?: string | null;
            /** Loan Id */
            loan_id?: number | null;
            /** Lender */
            lender?: string | null;
            /** Card Number */
            card_number?: string | null;
            /** Card Expiry */
            card_expiry?: string | null;
            /** Wallet Provider */
            wallet_provider?: string | null;
            /** Wallet Identifier */
            wallet_identifier?: string | null;
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** PaymentSourceCreate */
        PaymentSourceCreate: {
            /** Name */
            name: string;
            /** Source Type */
            source_type: string;
            /** Description */
            description?: string | null;
            /**
             * Is Active
             * @default true
             */
            is_active: boolean;
            /** Bank Name */
            bank_name?: string | null;
            /** Account Number */
            account_number?: string | null;
            /** Ifsc Code */
            ifsc_code?: string | null;
            /** Branch */
            branch?: string | null;
            /** Loan Id */
            loan_id?: number | null;
            /** Lender */
            lender?: string | null;
            /** Card Number */
            card_number?: string | null;
            /** Card Expiry */
            card_expiry?: string | null;
            /** Wallet Provider */
            wallet_provider?: string | null;
            /** Wallet Identifier */
            wallet_identifier?: string | null;
        };
        /** PaymentSourceUpdate */
        PaymentSourceUpdate: {
            /** Name */
            name?: string | null;
            /** Source Type */
            source_type?: string | null;
            /** Description */
            description?: string | null;
            /** Is Active */
            is_active?: boolean | null;
            /** Bank Name */
            bank_name?: string | null;
            /** Account Number */
            account_number?: string | null;
            /** Ifsc Code */
            ifsc_code?: string | null;
            /** Branch */
            branch?: string | null;
            /** Loan Id */
            loan_id?: number | null;
            /** Lender */
            lender?: string | null;
            /** Card Number */
            card_number?: string | null;
            /** Card Expiry */
            card_expiry?: string | null;
            /** Wallet Provider */
            wallet_provider?: string | null;
            /** Wallet Identifier */
            wallet_identifier?: string | null;
        };
        /**
         * PaymentUpdate
         * @description Schema for updating payment details, allowing optional fields for partial updates.
         */
        PaymentUpdate: {
            /** Payment Date */
            payment_date?: string | null;
            /** Amount */
            amount?: number | string | null;
            /** Source Id */
            source_id?: number | null;
            /** Payment Mode */
            payment_mode?: string | null;
            /** Transaction Reference */
            transaction_reference?: string | null;
            /** Receipt Date */
            receipt_date?: string | null;
            /** Receipt Number */
            receipt_number?: string | null;
            /** Notes */
            notes?: string | null;
        };
        /**
         * Property
         * @description Schema for detailed view of a single property, extending public schema with additional details.
         */
        Property: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Address */
            address?: string | null;
            /** Developer */
            developer?: string | null;
            /** Parking Details */
            parking_details?: string | null;
            /**
             * Amenities
             * @default []
             */
            amenities: string[];
            /** Property Type */
            property_type?: string | null;
            /** Rera Id */
            rera_id?: string | null;
        };
        /**
         * PropertyCreate
         * @description Schema for creating a new property, inheriting all base property details.
         */
        PropertyCreate: {
            /** Name */
            name: string;
            /** Address */
            address?: string | null;
            /** Property Type */
            property_type?: string | null;
            /** Parking Details */
            parking_details?: string | null;
            /**
             * Amenities
             * @default []
             */
            amenities: string[];
            /** Developer */
            developer?: string | null;
            /** Rera Id */
            rera_id?: string | null;
        };
        /**
         * PropertyOld
         * @description Schema for representing an existing property with additional metadata like ID and timestamps.
         */
        PropertyOld: {
            /** Name */
            name: string;
            /** Address */
            address?: string | null;
            /** Property Type */
            property_type?: string | null;
            /** Parking Details */
            parking_details?: string | null;
            /**
             * Amenities
             * @default []
             */
            amenities: string[];
            /** Developer */
            developer?: string | null;
            /** Rera Id */
            rera_id?: string | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /**
         * PropertyPublic
         * @description Schema for listing properties with minimal information needed for the frontend.
         */
        PropertyPublic: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Address */
            address?: string | null;
            /** Developer */
            developer?: string | null;
        };
        /**
         * PropertyUpdate
         * @description Schema for updating property details, allowing partial updates with optional fields.
         */
        PropertyUpdate: {
            /** Name */
            name?: string | null;
            /** Address */
            address?: string | null;
            /** Property Type */
            property_type?: string | null;
            /** Parking Details */
            parking_details?: string | null;
            /** Amenities */
            amenities?: string[] | null;
            /** Developer */
            developer?: string | null;
            /** Rera Id */
            rera_id?: string | null;
        };
        /**
         * Purchase
         * @description Schema for detailed view of a single purchase, extending public schema with additional details.
         */
        Purchase: {
            /** Id */
            id: number;
            /** Property Name */
            property_name: string;
            /**
             * Purchase Date
             * Format: date
             */
            purchase_date: string;
            /** Super Area */
            super_area: string;
            /** Total Sale Cost */
            total_sale_cost: string;
            /** Registration Date */
            registration_date?: string | null;
            /** Possession Date */
            possession_date?: string | null;
            /** Carpet Area */
            carpet_area: string;
            /** Exclusive Area */
            exclusive_area?: string | null;
            /** Common Area */
            common_area?: string | null;
            /** Floor Number */
            floor_number?: number | null;
            /** Purchase Rate */
            purchase_rate: string;
            /** Current Rate */
            current_rate: string;
            /** Base Cost */
            base_cost: string;
            /** Other Charges */
            other_charges?: string | null;
            /** Ifms */
            ifms?: string | null;
            /** Lease Rent */
            lease_rent?: string | null;
            /** Amc */
            amc?: string | null;
            /** Gst */
            gst?: string | null;
            /** Property Cost */
            property_cost: string;
            /** Total Cost */
            total_cost: string;
            /** Remarks */
            remarks?: string | null;
            /** Seller */
            seller?: string | null;
        };
        /**
         * PurchaseCreate
         * @description Schema for creating a new purchase, inheriting all base purchase details and adding user ID.
         */
        PurchaseCreate: {
            /** Property Id */
            property_id: number;
            /** Carpet Area */
            carpet_area: number | string;
            /** Exclusive Area */
            exclusive_area?: number | string | null;
            /** Common Area */
            common_area?: number | string | null;
            /** Floor Number */
            floor_number?: number | null;
            /** Purchase Rate */
            purchase_rate: number | string;
            /** Current Rate */
            current_rate: number | string;
            /**
             * Purchase Date
             * Format: date
             */
            purchase_date: string;
            /** Registration Date */
            registration_date?: string | null;
            /** Possession Date */
            possession_date?: string | null;
            /** Base Cost */
            base_cost: number | string;
            /** Other Charges */
            other_charges?: number | string | null;
            /** Ifms */
            ifms?: number | string | null;
            /** Lease Rent */
            lease_rent?: number | string | null;
            /** Amc */
            amc?: number | string | null;
            /** Gst */
            gst?: number | string | null;
            /** Seller */
            seller?: string | null;
            /** Remarks */
            remarks?: string | null;
            /**
             * User Id
             * @default 1
             */
            user_id: number | null;
        };
        /**
         * PurchaseOld
         * @description Schema for representing an existing purchase with additional metadata like ID, user ID, and creation timestamp.
         */
        PurchaseOld: {
            /** Property Id */
            property_id: number;
            /** Carpet Area */
            carpet_area: string;
            /** Exclusive Area */
            exclusive_area?: string | null;
            /** Common Area */
            common_area?: string | null;
            /** Floor Number */
            floor_number?: number | null;
            /** Purchase Rate */
            purchase_rate: string;
            /** Current Rate */
            current_rate: string;
            /**
             * Purchase Date
             * Format: date
             */
            purchase_date: string;
            /** Registration Date */
            registration_date?: string | null;
            /** Possession Date */
            possession_date?: string | null;
            /** Base Cost */
            base_cost: string;
            /** Other Charges */
            other_charges?: string | null;
            /** Ifms */
            ifms?: string | null;
            /** Lease Rent */
            lease_rent?: string | null;
            /** Amc */
            amc?: string | null;
            /** Gst */
            gst?: string | null;
            /** Seller */
            seller?: string | null;
            /** Remarks */
            remarks?: string | null;
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /**
         * PurchasePublic
         * @description Schema for listing purchases with essential information for the frontend.
         */
        PurchasePublic: {
            /** Id */
            id: number;
            /** Property Name */
            property_name: string;
            /**
             * Purchase Date
             * Format: date
             */
            purchase_date: string;
            /** Super Area */
            super_area: string;
            /** Total Sale Cost */
            total_sale_cost: string;
        };
        /**
         * PurchaseUpdate
         * @description Schema for updating purchase details, allowing partial updates with optional fields.
         */
        PurchaseUpdate: {
            /** Property Id */
            property_id?: number | null;
            /** Carpet Area */
            carpet_area?: number | null;
            /** Exclusive Area */
            exclusive_area?: number | null;
            /** Common Area */
            common_area?: number | null;
            /** Floor Number */
            floor_number?: number | null;
            /** Purchase Rate */
            purchase_rate?: number | null;
            /** Current Rate */
            current_rate?: number | null;
            /** Purchase Date */
            purchase_date?: string | null;
            /** Registration Date */
            registration_date?: string | null;
            /** Possession Date */
            possession_date?: string | null;
            /** Base Cost */
            base_cost?: number | null;
            /** Other Charges */
            other_charges?: number | null;
            /** Ifms */
            ifms?: number | null;
            /** Lease Rent */
            lease_rent?: number | null;
            /** Amc */
            amc?: number | null;
            /** Gst */
            gst?: number | null;
            /** Seller */
            seller?: string | null;
            /** Remarks */
            remarks?: string | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_properties_properties__get: {
        parameters: {
            query?: {
                developer?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PropertyPublic"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_property_properties__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PropertyCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PropertyOld"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_property_properties__property_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                property_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Property"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_property_properties__property_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                property_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PropertyUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PropertyOld"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_property_properties__property_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                property_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_purchases_purchases__get: {
        parameters: {
            query?: {
                property_id?: number | null;
                developer?: string | null;
                from_date?: string | null;
                to_date?: string | null;
                min_amount?: number | null;
                max_amount?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PurchasePublic"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_purchase_purchases__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PurchaseCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PurchaseOld"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_purchase_purchases__purchase_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                purchase_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PurchaseUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PurchaseOld"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_purchase_purchases__purchase_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                purchase_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_purchase_purchases__purchase_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                purchase_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Purchase"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_loans_loans__get: {
        parameters: {
            query?: {
                purchase_id?: number | null;
                is_active?: boolean | null;
                from_amount?: number | null;
                to_amount?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanPublic"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_loan_loans__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoanCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanOld"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_loan_loans__loan_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                loan_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Loan"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_loan_loans__loan_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                loan_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoanUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanOld"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_loan_loans__loan_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                loan_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_payments_payments__get: {
        parameters: {
            query?: {
                purchase_id?: number | null;
                invoice_id?: number | null;
                source_id?: number | null;
                payment_mode?: string | null;
                from_date?: string | null;
                to_date?: string | null;
                min_amount?: number | null;
                max_amount?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaymentPublic"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_payment_payments__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PaymentCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaymentOld"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_payment_payments__payment_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                payment_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PaymentUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaymentOld"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_payment_payments__payment_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                payment_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_payment_payments__payment_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                payment_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_loan_repayments_repayments__get: {
        parameters: {
            query?: {
                loan_id?: number | null;
                source_id?: number | null;
                from_date?: string | null;
                to_date?: string | null;
                min_amount?: number | null;
                max_amount?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanRepaymentPublic"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_loan_repayment_repayments__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoanRepaymentCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanRepaymentOld"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_loan_repayment_repayments__repayment_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                repayment_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoanRepaymentUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanRepaymentOld"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_loan_repayment_repayments__repayment_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                repayment_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_loan_repayment_repayments__repayment_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                repayment_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanRepayment"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_payment_sources_payment_sources__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaymentSource"][];
                };
            };
        };
    };
    create_payment_source_payment_sources__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PaymentSourceCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaymentSource"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_payment_source_payment_sources__source_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                source_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaymentSource"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_payment_source_payment_sources__source_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                source_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PaymentSourceUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaymentSource"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_payment_source_payment_sources__source_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                source_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_invoices_invoices__get: {
        parameters: {
            query?: {
                purchase_id?: number | null;
                status?: string | null;
                milestone?: string | null;
                from_date?: string | null;
                to_date?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicePublic"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_invoice_invoices__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvoiceCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoiceOld"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_invoice_invoices__invoice_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                invoice_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Invoice"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_invoice_invoices__invoice_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                invoice_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvoiceUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoiceOld"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_invoice_invoices__invoice_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                invoice_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    health_check_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_construction_statuses_construction_status__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConstructionStatus"][];
                };
            };
        };
    };
    get_construction_status_construction_status__status_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                status_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConstructionStatus"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_acquisition_cost_summary_acquisition_cost_summary__get: {
        parameters: {
            query?: {
                user_id?: number | null;
                purchase_id?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AcquisitionCostSummary"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_acquisition_cost_details_acquisition_cost_details__get: {
        parameters: {
            query?: {
                user_id?: number | null;
                purchase_id?: number | null;
                from_date?: string | null;
                to_date?: string | null;
                type?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AcquisitionCostDetails"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_loan_repayment_summary_loan_repayment_details_summary__get: {
        parameters: {
            query: {
                user_id: number;
                loan_name?: string | null;
                from_date?: string | null;
                to_date?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanRepaymentSummary"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_loan_summary_loans_summary__get: {
        parameters: {
            query?: {
                user_id?: number | null;
                loan_id?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanSummary"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_enhanced_loan_summary_loans_summary_enhanced__get: {
        parameters: {
            query?: {
                user_id?: number | null;
                loan_id?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>[];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
